package com.internation.info.model;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;
@Repository
public class MyCollectionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public MyCollectionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUIdIsNull() {
            addCriterion("uId is null");
            return (Criteria) this;
        }

        public Criteria andUIdIsNotNull() {
            addCriterion("uId is not null");
            return (Criteria) this;
        }

        public Criteria andUIdEqualTo(Integer value) {
            addCriterion("uId =", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdNotEqualTo(Integer value) {
            addCriterion("uId <>", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdGreaterThan(Integer value) {
            addCriterion("uId >", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("uId >=", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdLessThan(Integer value) {
            addCriterion("uId <", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdLessThanOrEqualTo(Integer value) {
            addCriterion("uId <=", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdIn(List<Integer> values) {
            addCriterion("uId in", values, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdNotIn(List<Integer> values) {
            addCriterion("uId not in", values, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdBetween(Integer value1, Integer value2) {
            addCriterion("uId between", value1, value2, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdNotBetween(Integer value1, Integer value2) {
            addCriterion("uId not between", value1, value2, "uId");
            return (Criteria) this;
        }

        public Criteria andIsUserIsNull() {
            addCriterion("isUser is null");
            return (Criteria) this;
        }

        public Criteria andIsUserIsNotNull() {
            addCriterion("isUser is not null");
            return (Criteria) this;
        }

        public Criteria andIsUserEqualTo(Integer value) {
            addCriterion("isUser =", value, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserNotEqualTo(Integer value) {
            addCriterion("isUser <>", value, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserGreaterThan(Integer value) {
            addCriterion("isUser >", value, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("isUser >=", value, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserLessThan(Integer value) {
            addCriterion("isUser <", value, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserLessThanOrEqualTo(Integer value) {
            addCriterion("isUser <=", value, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserIn(List<Integer> values) {
            addCriterion("isUser in", values, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserNotIn(List<Integer> values) {
            addCriterion("isUser not in", values, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserBetween(Integer value1, Integer value2) {
            addCriterion("isUser between", value1, value2, "isUser");
            return (Criteria) this;
        }

        public Criteria andIsUserNotBetween(Integer value1, Integer value2) {
            addCriterion("isUser not between", value1, value2, "isUser");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdIsNull() {
            addCriterion("myAttentionUserId is null");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdIsNotNull() {
            addCriterion("myAttentionUserId is not null");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdEqualTo(Integer value) {
            addCriterion("myAttentionUserId =", value, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdNotEqualTo(Integer value) {
            addCriterion("myAttentionUserId <>", value, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdGreaterThan(Integer value) {
            addCriterion("myAttentionUserId >", value, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("myAttentionUserId >=", value, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdLessThan(Integer value) {
            addCriterion("myAttentionUserId <", value, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("myAttentionUserId <=", value, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdIn(List<Integer> values) {
            addCriterion("myAttentionUserId in", values, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdNotIn(List<Integer> values) {
            addCriterion("myAttentionUserId not in", values, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdBetween(Integer value1, Integer value2) {
            addCriterion("myAttentionUserId between", value1, value2, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andMyAttentionUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("myAttentionUserId not between", value1, value2, "myAttentionUserId");
            return (Criteria) this;
        }

        public Criteria andIsQuestionIsNull() {
            addCriterion("isQuestion is null");
            return (Criteria) this;
        }

        public Criteria andIsQuestionIsNotNull() {
            addCriterion("isQuestion is not null");
            return (Criteria) this;
        }

        public Criteria andIsQuestionEqualTo(Integer value) {
            addCriterion("isQuestion =", value, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionNotEqualTo(Integer value) {
            addCriterion("isQuestion <>", value, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionGreaterThan(Integer value) {
            addCriterion("isQuestion >", value, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionGreaterThanOrEqualTo(Integer value) {
            addCriterion("isQuestion >=", value, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionLessThan(Integer value) {
            addCriterion("isQuestion <", value, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionLessThanOrEqualTo(Integer value) {
            addCriterion("isQuestion <=", value, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionIn(List<Integer> values) {
            addCriterion("isQuestion in", values, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionNotIn(List<Integer> values) {
            addCriterion("isQuestion not in", values, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionBetween(Integer value1, Integer value2) {
            addCriterion("isQuestion between", value1, value2, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andIsQuestionNotBetween(Integer value1, Integer value2) {
            addCriterion("isQuestion not between", value1, value2, "isQuestion");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdIsNull() {
            addCriterion("myCollectionOnArticleId is null");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdIsNotNull() {
            addCriterion("myCollectionOnArticleId is not null");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdEqualTo(Integer value) {
            addCriterion("myCollectionOnArticleId =", value, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdNotEqualTo(Integer value) {
            addCriterion("myCollectionOnArticleId <>", value, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdGreaterThan(Integer value) {
            addCriterion("myCollectionOnArticleId >", value, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("myCollectionOnArticleId >=", value, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdLessThan(Integer value) {
            addCriterion("myCollectionOnArticleId <", value, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdLessThanOrEqualTo(Integer value) {
            addCriterion("myCollectionOnArticleId <=", value, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdIn(List<Integer> values) {
            addCriterion("myCollectionOnArticleId in", values, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdNotIn(List<Integer> values) {
            addCriterion("myCollectionOnArticleId not in", values, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdBetween(Integer value1, Integer value2) {
            addCriterion("myCollectionOnArticleId between", value1, value2, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnArticleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("myCollectionOnArticleId not between", value1, value2, "myCollectionOnArticleId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdIsNull() {
            addCriterion("myCollectionOnQuestionId is null");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdIsNotNull() {
            addCriterion("myCollectionOnQuestionId is not null");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdEqualTo(Integer value) {
            addCriterion("myCollectionOnQuestionId =", value, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdNotEqualTo(Integer value) {
            addCriterion("myCollectionOnQuestionId <>", value, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdGreaterThan(Integer value) {
            addCriterion("myCollectionOnQuestionId >", value, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("myCollectionOnQuestionId >=", value, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdLessThan(Integer value) {
            addCriterion("myCollectionOnQuestionId <", value, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdLessThanOrEqualTo(Integer value) {
            addCriterion("myCollectionOnQuestionId <=", value, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdIn(List<Integer> values) {
            addCriterion("myCollectionOnQuestionId in", values, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdNotIn(List<Integer> values) {
            addCriterion("myCollectionOnQuestionId not in", values, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdBetween(Integer value1, Integer value2) {
            addCriterion("myCollectionOnQuestionId between", value1, value2, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andMyCollectionOnQuestionIdNotBetween(Integer value1, Integer value2) {
            addCriterion("myCollectionOnQuestionId not between", value1, value2, "myCollectionOnQuestionId");
            return (Criteria) this;
        }

        public Criteria andIsArticleIsNull() {
            addCriterion("isArticle is null");
            return (Criteria) this;
        }

        public Criteria andIsArticleIsNotNull() {
            addCriterion("isArticle is not null");
            return (Criteria) this;
        }

        public Criteria andIsArticleEqualTo(Integer value) {
            addCriterion("isArticle =", value, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleNotEqualTo(Integer value) {
            addCriterion("isArticle <>", value, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleGreaterThan(Integer value) {
            addCriterion("isArticle >", value, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleGreaterThanOrEqualTo(Integer value) {
            addCriterion("isArticle >=", value, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleLessThan(Integer value) {
            addCriterion("isArticle <", value, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleLessThanOrEqualTo(Integer value) {
            addCriterion("isArticle <=", value, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleIn(List<Integer> values) {
            addCriterion("isArticle in", values, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleNotIn(List<Integer> values) {
            addCriterion("isArticle not in", values, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleBetween(Integer value1, Integer value2) {
            addCriterion("isArticle between", value1, value2, "isArticle");
            return (Criteria) this;
        }

        public Criteria andIsArticleNotBetween(Integer value1, Integer value2) {
            addCriterion("isArticle not between", value1, value2, "isArticle");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table my_collection
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 10 15:11:12 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table my_collection
     *
     * @mbggenerated Tue Apr 10 15:11:12 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}