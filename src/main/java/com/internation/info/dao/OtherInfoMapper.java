package com.internation.info.dao;

import com.internation.info.model.OtherInfo;
import com.internation.info.model.OtherInfoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface OtherInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @SelectProvider(type=OtherInfoSqlProvider.class, method="countByExample")
    int countByExample(OtherInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @DeleteProvider(type=OtherInfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(OtherInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @Delete({
        "delete from otherinfo",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @Insert({
        "insert into otherinfo (id, title, ",
        "createTime, username, ",
        "url, seecount, infoType, ",
        "source, pictureUrl, ",
        "content)",
        "values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}, ",
        "#{url,jdbcType=VARCHAR}, #{seecount,jdbcType=VARCHAR}, #{infoType,jdbcType=VARCHAR}, ",
        "#{source,jdbcType=VARCHAR}, #{pictureUrl,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=LONGVARBINARY})"
    })
    int insert(OtherInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @InsertProvider(type=OtherInfoSqlProvider.class, method="insertSelective")
    int insertSelective(OtherInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @SelectProvider(type=OtherInfoSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="seecount", property="seecount", jdbcType=JdbcType.VARCHAR),
        @Result(column="infoType", property="infoType", jdbcType=JdbcType.VARCHAR),
        @Result(column="source", property="source", jdbcType=JdbcType.VARCHAR),
        @Result(column="pictureUrl", property="pictureUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARBINARY)
    })
    List<OtherInfo> selectByExampleWithBLOBs(OtherInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @SelectProvider(type=OtherInfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="seecount", property="seecount", jdbcType=JdbcType.VARCHAR),
        @Result(column="infoType", property="infoType", jdbcType=JdbcType.VARCHAR),
        @Result(column="source", property="source", jdbcType=JdbcType.VARCHAR),
        @Result(column="pictureUrl", property="pictureUrl", jdbcType=JdbcType.VARCHAR)
    })
    List<OtherInfo> selectByExample(OtherInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @Select({
        "select",
        "id, title, createTime, username, url, seecount, infoType, source, pictureUrl, ",
        "content",
        "from otherinfo",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="seecount", property="seecount", jdbcType=JdbcType.VARCHAR),
        @Result(column="infoType", property="infoType", jdbcType=JdbcType.VARCHAR),
        @Result(column="source", property="source", jdbcType=JdbcType.VARCHAR),
        @Result(column="pictureUrl", property="pictureUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARBINARY)
    })
    OtherInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @UpdateProvider(type=OtherInfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") OtherInfo record, @Param("example") OtherInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @UpdateProvider(type=OtherInfoSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") OtherInfo record, @Param("example") OtherInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @UpdateProvider(type=OtherInfoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") OtherInfo record, @Param("example") OtherInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @UpdateProvider(type=OtherInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(OtherInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @Update({
        "update otherinfo",
        "set title = #{title,jdbcType=VARCHAR},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "username = #{username,jdbcType=VARCHAR},",
          "url = #{url,jdbcType=VARCHAR},",
          "seecount = #{seecount,jdbcType=VARCHAR},",
          "infoType = #{infoType,jdbcType=VARCHAR},",
          "source = #{source,jdbcType=VARCHAR},",
          "pictureUrl = #{pictureUrl,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=LONGVARBINARY}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(OtherInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table otherinfo
     *
     * @mbggenerated Sat May 05 23:56:21 CST 2018
     */
    @Update({
        "update otherinfo",
        "set title = #{title,jdbcType=VARCHAR},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "username = #{username,jdbcType=VARCHAR},",
          "url = #{url,jdbcType=VARCHAR},",
          "seecount = #{seecount,jdbcType=VARCHAR},",
          "infoType = #{infoType,jdbcType=VARCHAR},",
          "source = #{source,jdbcType=VARCHAR},",
          "pictureUrl = #{pictureUrl,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(OtherInfo record);
}